// Code generated by kok; DO NOT EDIT.
// github.com/RussellLuo/kok

package admin

import (
	"reflect"

	"github.com/RussellLuo/kok/pkg/oasv2"
)

var (
	base = `swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Example"
  description: ""
  license:
    name: "MIT"
host: "example.com"
basePath: "/api"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
`

	paths = `
paths:
  /routes:
    post:
      description: ""
      operationId: "CreateRoute"
      parameters: 
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreateRouteRequestBody" 
      %s
    get:
      description: ""
      operationId: "ListRoutes" 
      %s 
  /services:
    post:
      description: ""
      operationId: "CreateService"
      parameters: 
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreateServiceRequestBody" 
      %s
    get:
      description: ""
      operationId: "ListServices" 
      %s 
  /plugins:
    post:
      description: ""
      operationId: "CreateTenantCanaryPlugin"
      parameters: 
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreateTenantCanaryPluginRequestBody" 
      %s
    get:
      description: ""
      operationId: "ListPlugins" 
      %s 
  /plugins/{name}:
    delete:
      description: ""
      operationId: "DeletePlugin"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: ""  
      %s
    get:
      description: ""
      operationId: "GetPlugin"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: ""  
      %s 
  /routes/{name}:
    delete:
      description: ""
      operationId: "DeleteRoute"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: ""  
      %s
    get:
      description: ""
      operationId: "GetRoute"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: ""  
      %s
    put:
      description: ""
      operationId: "UpdateRoute"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: "" 
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateRouteRequestBody" 
      %s 
  /services/{name}:
    delete:
      description: ""
      operationId: "DeleteService"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: ""  
      %s
    get:
      description: ""
      operationId: "GetService"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: ""  
      %s
    put:
      description: ""
      operationId: "UpdateService"
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: "" 
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateServiceRequestBody" 
      %s  
`
)

func getResponses(schema oasv2.Schema) []oasv2.OASResponses {
	return []oasv2.OASResponses{
		oasv2.GetOASResponses(schema, "CreateRoute", 200, &CreateRouteResponse{}),
		oasv2.GetOASResponses(schema, "ListRoutes", 200, &ListRoutesResponse{}),
		oasv2.GetOASResponses(schema, "CreateService", 200, &CreateServiceResponse{}),
		oasv2.GetOASResponses(schema, "ListServices", 200, &ListServicesResponse{}),
		oasv2.GetOASResponses(schema, "CreateTenantCanaryPlugin", 200, &CreateTenantCanaryPluginResponse{}),
		oasv2.GetOASResponses(schema, "ListPlugins", 200, &ListPluginsResponse{}),
		oasv2.GetOASResponses(schema, "DeletePlugin", 204, &DeletePluginResponse{}),
		oasv2.GetOASResponses(schema, "GetPlugin", 200, &GetPluginResponse{}),
		oasv2.GetOASResponses(schema, "DeleteRoute", 204, &DeleteRouteResponse{}),
		oasv2.GetOASResponses(schema, "GetRoute", 200, &GetRouteResponse{}),
		oasv2.GetOASResponses(schema, "UpdateRoute", 200, &UpdateRouteResponse{}),
		oasv2.GetOASResponses(schema, "DeleteService", 204, &DeleteServiceResponse{}),
		oasv2.GetOASResponses(schema, "GetService", 200, &GetServiceResponse{}),
		oasv2.GetOASResponses(schema, "UpdateService", 200, &UpdateServiceResponse{}),
	}
}

func getDefinitions(schema oasv2.Schema) map[string]oasv2.Definition {
	defs := make(map[string]oasv2.Definition)

	oasv2.AddDefinition(defs, "CreateRouteRequestBody", reflect.ValueOf((&CreateRouteRequest{}).Route))
	oasv2.AddResponseDefinitions(defs, schema, "CreateRoute", 200, (&CreateRouteResponse{}).Body())

	oasv2.AddDefinition(defs, "CreateServiceRequestBody", reflect.ValueOf((&CreateServiceRequest{}).Svc))
	oasv2.AddResponseDefinitions(defs, schema, "CreateService", 200, (&CreateServiceResponse{}).Body())

	oasv2.AddDefinition(defs, "CreateTenantCanaryPluginRequestBody", reflect.ValueOf((&CreateTenantCanaryPluginRequest{}).P))
	oasv2.AddResponseDefinitions(defs, schema, "CreateTenantCanaryPlugin", 200, (&CreateTenantCanaryPluginResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "DeletePlugin", 204, (&DeletePluginResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "DeleteRoute", 204, (&DeleteRouteResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "DeleteService", 204, (&DeleteServiceResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "GetPlugin", 200, (&GetPluginResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "GetRoute", 200, (&GetRouteResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "GetService", 200, (&GetServiceResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "ListPlugins", 200, (&ListPluginsResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "ListRoutes", 200, (&ListRoutesResponse{}).Body())

	oasv2.AddResponseDefinitions(defs, schema, "ListServices", 200, (&ListServicesResponse{}).Body())

	oasv2.AddDefinition(defs, "UpdateRouteRequestBody", reflect.ValueOf((&UpdateRouteRequest{}).Route))
	oasv2.AddResponseDefinitions(defs, schema, "UpdateRoute", 200, (&UpdateRouteResponse{}).Body())

	oasv2.AddDefinition(defs, "UpdateServiceRequestBody", reflect.ValueOf((&UpdateServiceRequest{}).Svc))
	oasv2.AddResponseDefinitions(defs, schema, "UpdateService", 200, (&UpdateServiceResponse{}).Body())

	return defs
}

func OASv2APIDoc(schema oasv2.Schema) string {
	resps := getResponses(schema)
	paths := oasv2.GenPaths(resps, paths)

	defs := getDefinitions(schema)
	definitions := oasv2.GenDefinitions(defs)

	return base + paths + definitions
}
