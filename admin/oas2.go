// Code generated by kun; DO NOT EDIT.
// github.com/RussellLuo/kun

package admin

import (
	"reflect"

	"github.com/RussellLuo/kun/pkg/oas2"
)

var (
	base = `swagger: "2.0"
info:
  title: "No Title"
  version: "0.0.0"
  description: ""
  license:
    name: "MIT"
host: "example.com"
basePath: "/"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
`

	paths = `
paths:
  /plugins:
    post:
      description: ""
      operationId: "CreatePlugin"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreatePluginRequestBody"
      %s
    get:
      description: ""
      operationId: "ListPlugins"
      %s
  /routes/{routeName}/plugins:
    post:
      description: ""
      operationId: "CreatePlugin1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreatePluginRequestBody"
      %s
    get:
      description: ""
      operationId: "ListPlugins1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
  /services/{serviceName}/plugins:
    post:
      description: ""
      operationId: "CreatePlugin2"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreatePluginRequestBody"
      %s
    get:
      description: ""
      operationId: "ListPlugins2"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
      %s
  /routes:
    post:
      description: ""
      operationId: "CreateRoute"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreateRouteRequestBody"
      %s
    get:
      description: ""
      operationId: "ListRoutes"
      %s
  /services/{serviceName}/routes:
    post:
      description: ""
      operationId: "CreateRoute1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreateRouteRequestBody"
      %s
    get:
      description: ""
      operationId: "ListRoutes1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
      %s
  /services:
    post:
      description: ""
      operationId: "CreateService"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/CreateServiceRequestBody"
      %s
    get:
      description: ""
      operationId: "ListServices"
      %s
  /plugins/{pluginName}:
    delete:
      description: ""
      operationId: "DeletePlugin"
      parameters:
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetPlugin"
      parameters:
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdatePlugin"
      parameters:
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdatePluginRequestBody"
      %s
  /routes/{routeName}/plugins/{pluginName}:
    delete:
      description: ""
      operationId: "DeletePlugin1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetPlugin1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdatePlugin1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdatePluginRequestBody"
      %s
  /services/{serviceName}/plugins/{pluginName}:
    delete:
      description: ""
      operationId: "DeletePlugin2"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetPlugin2"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdatePlugin2"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: pluginName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdatePluginRequestBody"
      %s
  /routes/{routeName}:
    delete:
      description: ""
      operationId: "DeleteRoute"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetRoute"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdateRoute"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateRouteRequestBody"
      %s
  /services/{serviceName}/routes/{routeName}:
    delete:
      description: ""
      operationId: "DeleteRoute1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetRoute1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdateRoute1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateRouteRequestBody"
      %s
  /services/{serviceName}:
    delete:
      description: ""
      operationId: "DeleteService"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetService"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdateService"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateServiceRequestBody"
      %s
  /routes/{routeName}/service:
    delete:
      description: ""
      operationId: "DeleteService1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
    get:
      description: ""
      operationId: "GetService1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdateService1"
      parameters:
        - name: routeName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateServiceRequestBody"
      %s
  /config:
    get:
      description: ""
      operationId: "GetConfig"
      %s
  /upstreams/{upstreamName}:
    get:
      description: ""
      operationId: "GetUpstream"
      parameters:
        - name: upstreamName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdateUpstream"
      parameters:
        - name: upstreamName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateUpstreamRequestBody"
      %s
  /services/{serviceName}/upstream:
    get:
      description: ""
      operationId: "GetUpstream1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
      %s
    put:
      description: ""
      operationId: "UpdateUpstream1"
      parameters:
        - name: serviceName
          in: path
          required: true
          type: string
          description: ""
        - name: body
          in: body
          schema:
            $ref: "#/definitions/UpdateUpstreamRequestBody"
      %s
  /upstreams:
    get:
      description: ""
      operationId: "ListUpstreams"
      %s
`
)

func getResponses(schema oas2.Schema) []oas2.OASResponses {
	return []oas2.OASResponses{
		oas2.GetOASResponses(schema, "CreatePlugin", 200, &CreatePluginResponse{}),
		oas2.GetOASResponses(schema, "ListPlugins", 200, &ListPluginsResponse{}),
		oas2.GetOASResponses(schema, "CreatePlugin", 200, &CreatePluginResponse{}),
		oas2.GetOASResponses(schema, "ListPlugins", 200, &ListPluginsResponse{}),
		oas2.GetOASResponses(schema, "CreatePlugin", 200, &CreatePluginResponse{}),
		oas2.GetOASResponses(schema, "ListPlugins", 200, &ListPluginsResponse{}),
		oas2.GetOASResponses(schema, "CreateRoute", 200, &CreateRouteResponse{}),
		oas2.GetOASResponses(schema, "ListRoutes", 200, &ListRoutesResponse{}),
		oas2.GetOASResponses(schema, "CreateRoute", 200, &CreateRouteResponse{}),
		oas2.GetOASResponses(schema, "ListRoutes", 200, &ListRoutesResponse{}),
		oas2.GetOASResponses(schema, "CreateService", 200, &CreateServiceResponse{}),
		oas2.GetOASResponses(schema, "ListServices", 200, &ListServicesResponse{}),
		oas2.GetOASResponses(schema, "DeletePlugin", 204, &DeletePluginResponse{}),
		oas2.GetOASResponses(schema, "GetPlugin", 200, &GetPluginResponse{}),
		oas2.GetOASResponses(schema, "UpdatePlugin", 200, &UpdatePluginResponse{}),
		oas2.GetOASResponses(schema, "DeletePlugin", 204, &DeletePluginResponse{}),
		oas2.GetOASResponses(schema, "GetPlugin", 200, &GetPluginResponse{}),
		oas2.GetOASResponses(schema, "UpdatePlugin", 200, &UpdatePluginResponse{}),
		oas2.GetOASResponses(schema, "DeletePlugin", 204, &DeletePluginResponse{}),
		oas2.GetOASResponses(schema, "GetPlugin", 200, &GetPluginResponse{}),
		oas2.GetOASResponses(schema, "UpdatePlugin", 200, &UpdatePluginResponse{}),
		oas2.GetOASResponses(schema, "DeleteRoute", 204, &DeleteRouteResponse{}),
		oas2.GetOASResponses(schema, "GetRoute", 200, &GetRouteResponse{}),
		oas2.GetOASResponses(schema, "UpdateRoute", 200, &UpdateRouteResponse{}),
		oas2.GetOASResponses(schema, "DeleteRoute", 204, &DeleteRouteResponse{}),
		oas2.GetOASResponses(schema, "GetRoute", 200, &GetRouteResponse{}),
		oas2.GetOASResponses(schema, "UpdateRoute", 200, &UpdateRouteResponse{}),
		oas2.GetOASResponses(schema, "DeleteService", 204, &DeleteServiceResponse{}),
		oas2.GetOASResponses(schema, "GetService", 200, &GetServiceResponse{}),
		oas2.GetOASResponses(schema, "UpdateService", 200, &UpdateServiceResponse{}),
		oas2.GetOASResponses(schema, "DeleteService", 204, &DeleteServiceResponse{}),
		oas2.GetOASResponses(schema, "GetService", 200, &GetServiceResponse{}),
		oas2.GetOASResponses(schema, "UpdateService", 200, &UpdateServiceResponse{}),
		oas2.GetOASResponses(schema, "GetConfig", 200, &GetConfigResponse{}),
		oas2.GetOASResponses(schema, "GetUpstream", 200, &GetUpstreamResponse{}),
		oas2.GetOASResponses(schema, "UpdateUpstream", 200, &UpdateUpstreamResponse{}),
		oas2.GetOASResponses(schema, "GetUpstream", 200, &GetUpstreamResponse{}),
		oas2.GetOASResponses(schema, "UpdateUpstream", 200, &UpdateUpstreamResponse{}),
		oas2.GetOASResponses(schema, "ListUpstreams", 200, &ListUpstreamsResponse{}),
	}
}

func getDefinitions(schema oas2.Schema) map[string]oas2.Definition {
	defs := make(map[string]oas2.Definition)

	oas2.AddDefinition(defs, "CreatePluginRequestBody", reflect.ValueOf((&CreatePluginRequest{}).P))
	oas2.AddResponseDefinitions(defs, schema, "CreatePlugin", 200, (&CreatePluginResponse{}).Body())

	oas2.AddDefinition(defs, "CreatePluginRequestBody", reflect.ValueOf((&CreatePluginRequest{}).P))
	oas2.AddResponseDefinitions(defs, schema, "CreatePlugin", 200, (&CreatePluginResponse{}).Body())

	oas2.AddDefinition(defs, "CreatePluginRequestBody", reflect.ValueOf((&CreatePluginRequest{}).P))
	oas2.AddResponseDefinitions(defs, schema, "CreatePlugin", 200, (&CreatePluginResponse{}).Body())

	oas2.AddDefinition(defs, "CreateRouteRequestBody", reflect.ValueOf((&CreateRouteRequest{}).Route))
	oas2.AddResponseDefinitions(defs, schema, "CreateRoute", 200, (&CreateRouteResponse{}).Body())

	oas2.AddDefinition(defs, "CreateRouteRequestBody", reflect.ValueOf((&CreateRouteRequest{}).Route))
	oas2.AddResponseDefinitions(defs, schema, "CreateRoute", 200, (&CreateRouteResponse{}).Body())

	oas2.AddDefinition(defs, "CreateServiceRequestBody", reflect.ValueOf((&CreateServiceRequest{}).Svc))
	oas2.AddResponseDefinitions(defs, schema, "CreateService", 200, (&CreateServiceResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeletePlugin", 204, (&DeletePluginResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeletePlugin", 204, (&DeletePluginResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeletePlugin", 204, (&DeletePluginResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeleteRoute", 204, (&DeleteRouteResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeleteRoute", 204, (&DeleteRouteResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeleteService", 204, (&DeleteServiceResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "DeleteService", 204, (&DeleteServiceResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetConfig", 200, (&GetConfigResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetPlugin", 200, (&GetPluginResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetPlugin", 200, (&GetPluginResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetPlugin", 200, (&GetPluginResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetRoute", 200, (&GetRouteResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetRoute", 200, (&GetRouteResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetService", 200, (&GetServiceResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetService", 200, (&GetServiceResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetUpstream", 200, (&GetUpstreamResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "GetUpstream", 200, (&GetUpstreamResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListPlugins", 200, (&ListPluginsResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListPlugins", 200, (&ListPluginsResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListPlugins", 200, (&ListPluginsResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListRoutes", 200, (&ListRoutesResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListRoutes", 200, (&ListRoutesResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListServices", 200, (&ListServicesResponse{}).Body())

	oas2.AddResponseDefinitions(defs, schema, "ListUpstreams", 200, (&ListUpstreamsResponse{}).Body())

	oas2.AddDefinition(defs, "UpdatePluginRequestBody", reflect.ValueOf((&UpdatePluginRequest{}).Plugin))
	oas2.AddResponseDefinitions(defs, schema, "UpdatePlugin", 200, (&UpdatePluginResponse{}).Body())

	oas2.AddDefinition(defs, "UpdatePluginRequestBody", reflect.ValueOf((&UpdatePluginRequest{}).Plugin))
	oas2.AddResponseDefinitions(defs, schema, "UpdatePlugin", 200, (&UpdatePluginResponse{}).Body())

	oas2.AddDefinition(defs, "UpdatePluginRequestBody", reflect.ValueOf((&UpdatePluginRequest{}).Plugin))
	oas2.AddResponseDefinitions(defs, schema, "UpdatePlugin", 200, (&UpdatePluginResponse{}).Body())

	oas2.AddDefinition(defs, "UpdateRouteRequestBody", reflect.ValueOf((&UpdateRouteRequest{}).Route))
	oas2.AddResponseDefinitions(defs, schema, "UpdateRoute", 200, (&UpdateRouteResponse{}).Body())

	oas2.AddDefinition(defs, "UpdateRouteRequestBody", reflect.ValueOf((&UpdateRouteRequest{}).Route))
	oas2.AddResponseDefinitions(defs, schema, "UpdateRoute", 200, (&UpdateRouteResponse{}).Body())

	oas2.AddDefinition(defs, "UpdateServiceRequestBody", reflect.ValueOf((&UpdateServiceRequest{}).Svc))
	oas2.AddResponseDefinitions(defs, schema, "UpdateService", 200, (&UpdateServiceResponse{}).Body())

	oas2.AddDefinition(defs, "UpdateServiceRequestBody", reflect.ValueOf((&UpdateServiceRequest{}).Svc))
	oas2.AddResponseDefinitions(defs, schema, "UpdateService", 200, (&UpdateServiceResponse{}).Body())

	oas2.AddDefinition(defs, "UpdateUpstreamRequestBody", reflect.ValueOf((&UpdateUpstreamRequest{}).Upstream))
	oas2.AddResponseDefinitions(defs, schema, "UpdateUpstream", 200, (&UpdateUpstreamResponse{}).Body())

	oas2.AddDefinition(defs, "UpdateUpstreamRequestBody", reflect.ValueOf((&UpdateUpstreamRequest{}).Upstream))
	oas2.AddResponseDefinitions(defs, schema, "UpdateUpstream", 200, (&UpdateUpstreamResponse{}).Body())

	return defs
}

func OASv2APIDoc(schema oas2.Schema) string {
	resps := getResponses(schema)
	paths := oas2.GenPaths(resps, paths)

	defs := getDefinitions(schema)
	definitions := oas2.GenDefinitions(defs)

	return base + paths + definitions
}
